Index: src/fr/neyuux/uhc/UHCWorld.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.neyuux.uhc;\r\n\r\nimport fr.neyuux.uhc.listeners.WorldListener;\r\nimport net.minecraft.server.v1_8_R3.MinecraftServer;\r\nimport net.minecraft.server.v1_8_R3.PropertyManager;\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.bukkit.*;\r\nimport org.bukkit.block.Block;\r\nimport org.bukkit.block.BlockFace;\r\nimport org.bukkit.configuration.file.YamlConfiguration;\r\nimport org.bukkit.craftbukkit.v1_8_R3.CraftServer;\r\nimport org.bukkit.entity.ArmorStand;\r\nimport org.bukkit.entity.EntityType;\r\nimport org.bukkit.entity.Player;\r\n\r\nimport java.io.File;\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.nio.file.Paths;\r\nimport java.text.DecimalFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class UHCWorld {\r\n\r\n    private static World world;\r\n    private static boolean loaded = false;\r\n    private static YamlConfiguration yconfig;\r\n    private static final List<Location> spawns = new ArrayList<>();\r\n\r\n    public static String MAIN_WORLD = \"Core\";\r\n\r\n    private final UHC main;\r\n\r\n    public UHCWorld(UHC main) {\r\n        this.main = main;\r\n        File file = new File(main.getDataFolder(), \"config.yml\");\r\n        yconfig = YamlConfiguration.loadConfiguration(file);\r\n    }\r\n\r\n\r\n    public UHCWorld create() {\r\n        Long seed = (long)0;\r\n        if (main.mode.equals(UHC.Modes.UHC))\r\n            seed = yconfig.getLongList(\"uhc_maps\").get(new Random().nextInt(yconfig.getLongList(\"uhc_maps\").size()));\r\n        else if (main.mode.equals(UHC.Modes.LG))\r\n            seed = yconfig.getLongList(\"lg_maps\").get(new Random().nextInt(yconfig.getLongList(\"lg_maps\").size()));\r\n        Bukkit.broadcastMessage(UHC.getPrefix() + \"§2Création du monde §a\\\"§l\" + seed + \"§a\\\"§2...\");\r\n\r\n        System.out.println(world);\r\n        world = Bukkit.createWorld(new WorldCreator(seed.toString()).seed(seed));\r\n        MAIN_WORLD = world.getName();\r\n        this.createBarrierPlatform();\r\n        System.out.println(world);\r\n        spawns.clear();\r\n        return this;\r\n    }\r\n\r\n    public static boolean isCreated() {\r\n        return world != null;\r\n    }\r\n\r\n    public long getSeed() {\r\n        if (world == null) return 0;\r\n        return world.getSeed();\r\n    }\r\n\r\n    public void changePVP(boolean value) {\r\n        if (world == null) throw new NullPointerException(\"Aucun monde n est cree\");\r\n        world.setPVP(value);\r\n    }\r\n\r\n    public Boolean hasPvP() {\r\n        if (world == null) throw new NullPointerException(\"Aucun monde n est cree\");\r\n        return world.getPVP();\r\n    }\r\n\r\n    public void setDayCycle(Boolean value) {\r\n        if (world == null) throw new NullPointerException(\"Aucun monde n est cree\");\r\n        world.setGameRuleValue(\"doDaylightCycle\", value.toString().toLowerCase());\r\n    }\r\n\r\n    public void setTime(long value) {\r\n        if (world == null) throw new NullPointerException(\"Aucun monde n est cree\");\r\n        world.setTime(value);\r\n    }\r\n\r\n    public void delete() {\r\n        if (world == null) return;\r\n        MAIN_WORLD = \"Core\";\r\n        for (Player p : world.getPlayers())\r\n            p.teleport(this.getPlatformLoc());\r\n        long seed = world.getSeed();\r\n        world.setAutoSave(false);\r\n        //loaded = false;\r\n        Bukkit.unloadWorld(Long.toString(seed), false);\r\n        try {\r\n            FileUtils.deleteDirectory(world.getWorldFolder());\r\n        } catch (IOException ignored) { }\r\n        world = null;\r\n    }\r\n\r\n    public void createBarrierPlatform() {\r\n        World w = Bukkit.getWorld(MAIN_WORLD);\r\n\r\n        for (int x = -25; x <= 25; x++)\r\n            for (int z = -25; z <= 25; z++) {\r\n                w.getBlockAt(x, 130, z).setType(Material.BARRIER);\r\n                if (x == 25 || x == -25 || z == 25 || z == -25)\r\n                    w.getBlockAt(x, 132, z).setType(Material.BARRIER);\r\n            }\r\n        if (!MAIN_WORLD.equals(\"Core\")) this.loadChunks();\r\n    }\r\n\r\n    public Location getPlatformLoc() {\r\n        return new Location(Bukkit.getWorld(MAIN_WORLD), new Random().nextInt(50)-24, 131.5, new Random().nextInt(50)-24);\r\n    }\r\n\r\n    /*public boolean isLoaded() {\r\n        return loaded;\r\n    }\r\n\r\n    public void preGenerateWorld() {\r\n        if (world == null) throw new NullPointerException(\"Aucun monde n est cree\");\r\n        final ArrayList<Chunk> loaded = new ArrayList<>();\r\n        int radius = (int) Math.round((double)GameConfig.ConfigurableParams.BORDERSIZE.getValue());\r\n        String start = new Date().toString();\r\n\r\n        int maxX = 17 + radius;\r\n        int maxZ = 17 + radius;\r\n        int minX = 1 - radius;\r\n        int minZ = 1 - radius;\r\n        int fail = 0;\r\n        int total = 0;\r\n        for (int x = minX; x < maxX; x += 16) {\r\n            System.out.println(\"Generating Chunks for X: \" + x + \" Z: \" + minZ + \" to \" + maxZ);\r\n            for (int z = minZ; z < maxZ; z += 16) {\r\n                if (!world.loadChunk(x, z, true))\r\n                    fail++;\r\n                total++;\r\n                loaded.add(world.getChunkAt(x, z));\r\n                DecimalFormat f = new DecimalFormat();\r\n                f.setMaximumFractionDigits(2);\r\n                Bukkit.broadcastMessage(main.getPrefix() + \"§2Chargement du Monde à §a§l\" + f.format((int) Math.round((double) GameConfig.ConfigurableParams.BORDERSIZE.getValue()) / 16 / total * 100) + \"%§2.\");\r\n                if (loaded.size() == 2000) {\r\n                    System.out.println(\"Unloading loaded chunks\");\r\n                    for (Chunk load : loaded)\r\n                        load.unload();\r\n                    loaded.clear();\r\n                }\r\n            }\r\n            Runtime memCheck = Runtime.getRuntime();\r\n            while (memCheck.freeMemory() / memCheck.maxMemory() < 1) {\r\n                System.out.println(\"Free memory in heap below threshold, waiting 30 seconds\");\r\n                System.out.println(\"Free (%): \" + (memCheck.freeMemory() / memCheck.maxMemory()));\r\n                System.gc();\r\n                try {\r\n                    Thread.sleep(30000L);\r\n                } catch (Exception ignored) {}\r\n                memCheck = Runtime.getRuntime();\r\n            }\r\n        }\r\n        System.out.println(\"Execution Time:\");\r\n        System.out.println(\"Start: \" + start);\r\n        System.out.println(\"Finish: \" + (new Date()).toString());\r\n        System.out.println(\"Failed Chunks: \" + fail + \", Loaded: \" + (total - fail) + \" Chunks: \" + total);\r\n        System.out.println(\"Finished\");\r\n        UHCWorld.loaded = true;\r\n    }*/\r\n\r\n    public void loadChunks() {\r\n        if (loaded) {\r\n            DecimalFormat df = new DecimalFormat();\r\n            df.setMaximumFractionDigits(1);\r\n            double d = 0;\r\n            for (Location l : spawns) {\r\n                loadLocationChunks(l, true);\r\n                d++;\r\n                Bukkit.broadcastMessage(UHC.getPrefix() + \"§2Chargement du monde : §a§l\" + df.format(d / (main.getAlivePlayers().size() + 1) * 100) + \"%§2.\");\r\n            }\r\n        }\r\n        loadLocationChunks(new Location(world, 0, 70, 0), true);\r\n        Bukkit.broadcastMessage(UHC.getPrefix() + \"§2Chargement du monde : §a§l100%§2.\");\r\n        loaded = true;\r\n    }\r\n\r\n    private static List<Chunk> loadLocationChunks(Location loc, Boolean load) {\r\n        List<Chunk> chunks = new ArrayList<>();\r\n\r\n        int cx = loc.getBlockX() - 50;\r\n        int cz = loc.getBlockZ() - 50;\r\n\r\n        while (cx <= loc.getBlockX() + 50) {\r\n            while (cz <= loc.getBlockZ() + 50) {\r\n                System.out.println(\"Chargement chunk a x:\" + cx + \" z:\" + cz);\r\n                Location l = new Location(loc.getWorld(), cx, 0, cz);\r\n                if (load && !l.getChunk().isLoaded())\r\n                    l.getWorld().loadChunk(l.getChunk().getX(), l.getChunk().getZ(), true);\r\n                chunks.add(l.getChunk());\r\n                System.out.println(\"Chargement reussi\");\r\n                DecimalFormat f = new DecimalFormat();\r\n                f.setMaximumFractionDigits(2);\r\n                cz += 16;\r\n            }\r\n            cz = loc.getBlockZ() - 50;\r\n            cx += 16;\r\n        }\r\n\r\n        return chunks;\r\n    }\r\n\r\n    public static boolean isFarEnough(ArrayList<Location> list, Location loc, Integer player, Integer center, Integer border) {\r\n        if (world == null) throw new NullPointerException(\"Aucun monde n est cree\");\r\n        boolean farEnought = true;\r\n\r\n        for (Location l : list)\r\n            if (l.distance(loc) < player || loc.distance(new Location(world, 0, 0, 0)) < center\r\n                    || (double) GameConfig.ConfigurableParams.BORDERSIZE.getValue() - loc.getBlockX() < border\r\n                    || (double) GameConfig.ConfigurableParams.BORDERSIZE.getValue() - loc.getBlockZ() < border) {\r\n                farEnought = false;\r\n                break;\r\n            }\r\n\r\n        return farEnought;\r\n    }\r\n\r\n\r\n    public List<Location> getSpawns() { return spawns; }\r\n\r\n    public static Location getRandomLocation(World w, int size, int maxTentative) {\r\n        List<Material> mat = Arrays.asList(Material.WATER, Material.LAVA, Material.LEAVES, Material.AIR, Material.WATER_LILY, Material.STATIONARY_WATER, Material.STATIONARY_LAVA);\r\n        for (int i = 0; i <= maxTentative; i++) {\r\n            int x = new Random().nextInt(size - (-size) + 1) + (-size);\r\n            int z = new Random().nextInt(size - (-size) + 1) + (-size);\r\n\r\n            Location loc = new Location(w, x, 0, z);\r\n            loc = loc.getWorld().getHighestBlockAt(loc).getLocation();\r\n\r\n            if (loc != null && loc.getY() <= 160 && !mat.contains(loc.getBlock().getRelative(BlockFace.DOWN).getType()) && isInBorder(loc))\r\n                return loc.add(0, 40, 0);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public void addSpawnLoad() {\r\n        if (world == null) throw new NullPointerException(\"Aucun monde n est cree\");\r\n        Location tp = null;\r\n        int border = (int)Math.round((double) GameConfig.ConfigurableParams.BORDERSIZE.getValue());\r\n        while (tp == null || !isFarEnough(new ArrayList<>(spawns), tp, main.getAlivePlayers().size(), border/10/2, border/10))\r\n            tp = getRandomLocation(world, (int)Math.round((double) GameConfig.ConfigurableParams.BORDERSIZE.getValue()) / 2, 50);\r\n\r\n        WorldListener.keepChunk.addAll(loadLocationChunks(tp, false));\r\n        spawns.add(tp);\r\n    }\r\n\r\n    public static Boolean isOnSurface(Location loc) {\r\n        return loc.getBlock().getLightFromSky() >= 1;\r\n    }\r\n\r\n    public static Boolean isInWater(Location loc) {\r\n        int number = 0;\r\n        while (loc.clone().add(0,1,0).getBlock().getType() == Material.WATER || loc.clone()\r\n                .add(0,1,0).getBlock().getType() == Material.STATIONARY_WATER) {\r\n            number++;\r\n            loc = loc.add(0,1,0);\r\n        }\r\n        return number >= 4;\r\n    }\r\n\r\n    public static Boolean isInBorder(Location loc) {\r\n        return loc.getX() <= loc.getWorld().getWorldBorder().getSize() / 2 && loc.getZ() <= loc.getWorld().getWorldBorder().getSize() / 2;\r\n    }\r\n\r\n    public static void setAchievements(Boolean value) {\r\n        final CraftServer server = (CraftServer) Bukkit.getServer();\r\n        final MinecraftServer minecraftServer = server.getServer();\r\n        final PropertyManager manager = minecraftServer.getPropertyManager();\r\n        manager.properties.setProperty(\"announce-player-achievements\", value.toString().toLowerCase());\r\n        try {\r\n            final String baseDir = Paths.get(\"\").toAbsolutePath().toString() + File.separator;\r\n            final File f = new File(baseDir + \"server.properties\");\r\n            final OutputStream out = new FileOutputStream(f);\r\n            manager.properties.store(out, \"EditedByUHC\");\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public void initialiseWorldBorder() {\r\n        int size = (int) Math.round((double)GameConfig.ConfigurableParams.BORDERSIZE.getValue());\r\n        World world = Bukkit.getWorld(\"\" + getSeed());\r\n        WorldBorder border = world.getWorldBorder();\r\n        border.setCenter(0, 0);\r\n        border.setSize(size);\r\n        border.setDamageAmount(0.2);\r\n        border.setDamageBuffer(1);\r\n        border.setWarningTime(10);\r\n        border.setWarningDistance(0);\r\n        world.setDifficulty(Difficulty.HARD);\r\n        world.setTime(0);\r\n        world.setGameRuleValue(\"naturalRegeneration\", \"false\");\r\n        this.changePVP(false);\r\n    }\r\n\r\n    public void startWorldBorder() {\r\n        int size = (int) Math.round((double)GameConfig.ConfigurableParams.BORDERSIZE.getValue());\r\n        int fsize = (int) Math.round((double)GameConfig.ConfigurableParams.FINAL_BORDERSIZE.getValue());\r\n        double speed = Math.round((double)GameConfig.ConfigurableParams.BORDERSPEED.getValue());\r\n        World world = Bukkit.getWorld(\"\" + getSeed());\r\n        WorldBorder border = world.getWorldBorder();\r\n        border.setSize(fsize, (long) (((size - fsize) / speed)) / 2);\r\n    }\r\n\r\n    public static ArmorStand getArmorStand(Location loc) {\r\n        ArmorStand stand = (ArmorStand) loc.getWorld().spawnEntity(loc, EntityType.ARMOR_STAND);\r\n\r\n        stand.setCustomNameVisible(true);\r\n        stand.setVisible(false);\r\n        stand.setGravity(false);\r\n        stand.setSmall(false);\r\n\r\n        return stand;\r\n    }\r\n\r\n    public static List<Block> getNearbyBlocks(Location location, int radius) {\r\n        List<Block> blocks = new ArrayList<>();\r\n        for(int x = location.getBlockX() - radius; x <= location.getBlockX() + radius; x++)\r\n            for (int y = location.getBlockY() - radius; y <= location.getBlockY() + radius; y++)\r\n                for (int z = location.getBlockZ() - radius; z <= location.getBlockZ() + radius; z++)\r\n                    blocks.add(location.getWorld().getBlockAt(x, y, z));\r\n         System.out.println(blocks.toString());\r\n        return blocks;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
diff --git a/src/fr/neyuux/uhc/UHCWorld.java b/src/fr/neyuux/uhc/UHCWorld.java
--- a/src/fr/neyuux/uhc/UHCWorld.java	(revision 10f7427f663abb8596bc166fe6d0ca3192c53353)
+++ b/src/fr/neyuux/uhc/UHCWorld.java	(date 1633074884439)
@@ -50,11 +50,11 @@
             seed = yconfig.getLongList("lg_maps").get(new Random().nextInt(yconfig.getLongList("lg_maps").size()));
         Bukkit.broadcastMessage(UHC.getPrefix() + "§2Création du monde §a\"§l" + seed + "§a\"§2...");
 
-        System.out.println(world);
+        System.out.println("world : " + world);
         world = Bukkit.createWorld(new WorldCreator(seed.toString()).seed(seed));
         MAIN_WORLD = world.getName();
         this.createBarrierPlatform();
-        System.out.println(world);
+        System.out.println("world : " + world);
         spawns.clear();
         return this;
     }
@@ -95,7 +95,6 @@
             p.teleport(this.getPlatformLoc());
         long seed = world.getSeed();
         world.setAutoSave(false);
-        //loaded = false;
         Bukkit.unloadWorld(Long.toString(seed), false);
         try {
             FileUtils.deleteDirectory(world.getWorldFolder());
@@ -250,7 +249,7 @@
         if (world == null) throw new NullPointerException("Aucun monde n est cree");
         Location tp = null;
         int border = (int)Math.round((double) GameConfig.ConfigurableParams.BORDERSIZE.getValue());
-        while (tp == null || !isFarEnough(new ArrayList<>(spawns), tp, main.getAlivePlayers().size(), border/10/2, border/10))
+        while (tp == null || !isFarEnough(new ArrayList<>(spawns), tp, main.getAlivePlayers().size(), border/20, border/10))
             tp = getRandomLocation(world, (int)Math.round((double) GameConfig.ConfigurableParams.BORDERSIZE.getValue()) / 2, 50);
 
         WorldListener.keepChunk.addAll(loadLocationChunks(tp, false));
@@ -281,7 +280,7 @@
         final PropertyManager manager = minecraftServer.getPropertyManager();
         manager.properties.setProperty("announce-player-achievements", value.toString().toLowerCase());
         try {
-            final String baseDir = Paths.get("").toAbsolutePath().toString() + File.separator;
+            final String baseDir = Paths.get("").toAbsolutePath() + File.separator;
             final File f = new File(baseDir + "server.properties");
             final OutputStream out = new FileOutputStream(f);
             manager.properties.store(out, "EditedByUHC");
@@ -332,7 +331,7 @@
             for (int y = location.getBlockY() - radius; y <= location.getBlockY() + radius; y++)
                 for (int z = location.getBlockZ() - radius; z <= location.getBlockZ() + radius; z++)
                     blocks.add(location.getWorld().getBlockAt(x, y, z));
-         System.out.println(blocks.toString());
+         System.out.println(blocks);
         return blocks;
     }
 }
\ No newline at end of file
Index: src/fr/neyuux/uhc/scenario/classes/modes/AssaultAndBattery.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.neyuux.uhc.scenario.classes.modes;\r\n\r\nimport fr.neyuux.uhc.UHC;\r\nimport fr.neyuux.uhc.PlayerUHC;\r\nimport fr.neyuux.uhc.GameConfig;\r\nimport fr.neyuux.uhc.enums.Symbols;\r\nimport fr.neyuux.uhc.events.PlayerEliminationEvent;\r\nimport fr.neyuux.uhc.events.PlayerReviveEvent;\r\nimport fr.neyuux.uhc.scenario.Scenario;\r\nimport fr.neyuux.uhc.scenario.Scenarios;\r\nimport fr.neyuux.uhc.teams.UHCTeam;\r\nimport org.bukkit.Bukkit;\r\nimport org.bukkit.Material;\r\nimport org.bukkit.entity.EntityType;\r\nimport org.bukkit.entity.Player;\r\nimport org.bukkit.entity.Projectile;\r\nimport org.bukkit.event.EventHandler;\r\nimport org.bukkit.event.EventPriority;\r\nimport org.bukkit.event.Listener;\r\nimport org.bukkit.event.entity.EntityDamageByEntityEvent;\r\nimport org.bukkit.inventory.ItemStack;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class AssaultAndBattery extends Scenario implements Listener {\r\n    public AssaultAndBattery() {\r\n        super(Scenarios.ASSAULT_AND_BATTERY, new ItemStack(Material.BOW));\r\n    }\r\n\r\n    public static boolean hasRandomChoice = true;\r\n\r\n    public static final List<PlayerUHC> assaults = new ArrayList<>();\r\n    public static final List<PlayerUHC> batteries = new ArrayList<>();\r\n\r\n    @Override\r\n    protected void activate() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void execute() {\r\n        Bukkit.getServer().getPluginManager().registerEvents(this, UHC.getInstance());\r\n        Scenario.handlers.add(this);\r\n\r\n        Bukkit.getScheduler().runTaskLater(UHC.getInstance(), () -> {\r\n            if (hasRandomChoice) {\r\n                for (UHCTeam t : UHC.getInstance().getUHCTeamManager().getAliveTeams()) {\r\n                    List<PlayerUHC> ps = new ArrayList<>(t.getListAlivePlayers());\r\n                    PlayerUHC assault = ps.remove(new Random().nextInt(2));\r\n                    if (ps.size() != 0) {\r\n                        PlayerUHC battery = ps.remove(0);\r\n\r\n                        assaults.add(assault);\r\n                        batteries.add(battery);\r\n                        if (assault.getPlayer().isOnline())\r\n                            assault.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVous êtes §4§lAssault§c, vous ne pouvez donc vous battre qu'au corps-à-corps et toute utilisation d'arc, de canne à pêche, de boule de neige ou d'oeuf vous est impossible. Si votre coéquipier qui est Battery meurt, vous pourrez de nouveau utiliser l'arc et les autres items cités précédemment.\");\r\n                        if (battery.getPlayer().isOnline())\r\n                            battery.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVous êtes §a§lBattery§c, vous ne pouvez donc vous battre qu'à l'arc ou en utilisant des projectiles et toute utilisation d'épée, d'hache ou d'armes de corps-à-corps vous est impossible. Vous pouvez également utiliser la canne à pêche, les boules de neige et les oeufs en combat. Si votre coéquipier qui est Assault meurt, vous pourrez de nouveau utiliser les armes de corps-à-corps.\");\r\n                    } else {\r\n                        assaults.add(assault);\r\n                        batteries.add(assault);\r\n\r\n                        if (assault.getPlayer().isOnline())\r\n                            assault.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVous êtes seul. Par conséquent vous obtenez deux rôles §4§lAssault§c&§a§lBattery§c. Vous pouvez utiliser ce que vous voulez pour vous battre, et ce, jusqu'à la fin de la partie.\");\r\n                    }\r\n                }\r\n            } else\r\n                Bukkit.broadcastMessage(getPrefix() + \"§cPour définir si vous êtes Assault ou Battery, il vous faudra utiliser l'arme choisie sur un joueur de la partie (si vous frapper quelqu'un avec une arme de corps-à-corps, vous serez Assault et vice-versa.\");\r\n        }, 102L);\r\n    }\r\n\r\n    @Override\r\n    public boolean checkStart() {\r\n        return GameConfig.ConfigurableParams.TEAMTYPE.getValue().toString().endsWith(\"To2\");\r\n    }\r\n\r\n\r\n    @EventHandler(priority = EventPriority.LOWEST)\r\n    public void onDamageByEntity(EntityDamageByEntityEvent ev) {\r\n        if (ev.getDamager().getType().equals(EntityType.PLAYER) && ev.getEntityType().equals(EntityType.PLAYER)) {\r\n            Player d = (Player)ev.getDamager();\r\n            PlayerUHC du = UHC.getInstance().getPlayerUHC(d);\r\n            if (batteries.contains(du) && !assaults.contains(du)) {\r\n                ev.setCancelled(true);\r\n                UHC.sendActionBar(d, getPrefix() + \"§cVous ne pouvez pas frapper au corps-à-corps !\");\r\n                UHC.playNegativeSound(d);\r\n            } else if (!batteries.contains(du) && !assaults.contains(du) && !hasRandomChoice) {\r\n                List<PlayerUHC> ps = new ArrayList<>(du.getTeam().getListAlivePlayers());\r\n                ps.remove(du);\r\n                PlayerUHC battery = ps.remove(0);\r\n                assaults.add(du);\r\n                batteries.add(battery);\r\n                d.sendMessage(getPrefix() + \"§cVous êtes §4§lAssault§c, vous ne pouvez donc vous battre qu'au corps-à-corps et toute utilisation d'arc, de canne à pêche, de boule de neige ou d'oeuf vous est impossible. Si votre coéquipier qui est Battery meurt, vous pourrez de nouveau utiliser l'arc et les autres items cités précédemment.\");\r\n                if (battery.getPlayer().isOnline())\r\n                    battery.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVous êtes §a§lBattery§c, vous ne pouvez donc vous battre qu'à l'arc ou en utilisant des projectiles et toute utilisation d'épée, d'hache ou d'armes de corps-à-corps vous est impossible. Vous pouvez également utiliser la canne à pêche, les boules de neige et les oeufs en combat. Si votre coéquipier qui est Assault meurt, vous pourrez de nouveau utiliser les armes de corps-à-corps.\");\r\n            }\r\n        } else if (ev.getDamager() instanceof Projectile && ((Projectile)ev.getDamager()).getShooter() instanceof Player && ev.getEntityType().equals(EntityType.PLAYER)) {\r\n            Player d = (Player)((Projectile)ev.getDamager()).getShooter();\r\n            PlayerUHC du = UHC.getInstance().getPlayerUHC(d);\r\n            if (assaults.contains(du) && !batteries.contains(du)) {\r\n                ev.setCancelled(true);\r\n                UHC.sendActionBar(d, getPrefix() + \"§cVous ne pouvez pas utiliser de projectiles !\");\r\n                UHC.playNegativeSound(d);\r\n            } else if (!batteries.contains(du) && !assaults.contains(du) && !hasRandomChoice) {\r\n                List<PlayerUHC> ps = new ArrayList<>(du.getTeam().getListAlivePlayers());\r\n                ps.remove(du);\r\n                PlayerUHC assault = ps.remove(0);\r\n                batteries.add(du);\r\n                assaults.add(assault);\r\n                d.sendMessage(getPrefix() + \"§cVous êtes §a§lBattery§c, vous ne pouvez donc vous battre qu'à l'arc ou en utilisant des projectiles et toute utilisation d'épée, d'hache ou d'armes de corps-à-corps vous est impossible. Vous pouvez également utiliser la canne à pêche, les boules de neige et les oeufs en combat. Si votre coéquipier qui est Assault meurt, vous pourrez de nouveau utiliser les armes de corps-à-corps.\");\r\n                if (assault.getPlayer().isOnline())\r\n                    assault.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVous êtes §4§lAssault§c, vous ne pouvez donc vous battre qu'au corps-à-corps et toute utilisation d'arc, de canne à pêche, de boule de neige ou d'oeuf vous est impossible. Si votre coéquipier qui est Battery meurt, vous pourrez de nouveau utiliser l'arc et les autres items cités précédemment.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    @EventHandler\r\n    public void onDeath(PlayerEliminationEvent ev) {\r\n        List<PlayerUHC> ps = new ArrayList<>(ev.getPlayerUHC().getTeam().getListAlivePlayers());\r\n        ps.remove(ev.getPlayerUHC());\r\n        if (ps.size() != 0) {\r\n            PlayerUHC te = ps.remove(0);\r\n            if (!assaults.contains(te)) assaults.add(te);\r\n            if (!batteries.contains(te)) batteries.add(te);\r\n            if (te.getPlayer().isOnline())\r\n                te.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVotre coéquipier est mort... Désormais, vous devenez Assault&Battery vous pouvez donc utiliser tous les objets pour vous battre.\");\r\n        }\r\n    }\r\n\r\n    @EventHandler(priority = EventPriority.HIGHEST)\r\n    public void onRevive(PlayerReviveEvent ev) {\r\n        if (!ev.isCancelled()) {\r\n            List<PlayerUHC> ps = new ArrayList<>(ev.getPlayerUHC().getTeam().getListAlivePlayers());\r\n            ps.remove(ev.getPlayerUHC());\r\n            PlayerUHC te = ps.remove(0);\r\n            if (assaults.contains(ev.getPlayerUHC())) {\r\n                assaults.remove(te);\r\n                if (te.getPlayer().isOnline()) te.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVotre coéquipier a été ressucité ! Vous redevenez donc §a§lBattery§c !\");\r\n            } else if (batteries.contains(ev.getPlayerUHC())) {\r\n                batteries.remove(te);\r\n                if (te.getPlayer().isOnline()) te.getPlayer().getPlayer().sendMessage(getPrefix() + \"§cVotre coéquipier a été ressucité ! Vous redevenez donc §4§lAssault§c !\");\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public static boolean hasRole(PlayerUHC pu) {\r\n        return assaults.contains(pu) || batteries.contains(pu);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
diff --git a/src/fr/neyuux/uhc/scenario/classes/modes/AssaultAndBattery.java b/src/fr/neyuux/uhc/scenario/classes/modes/AssaultAndBattery.java
--- a/src/fr/neyuux/uhc/scenario/classes/modes/AssaultAndBattery.java	(revision 10f7427f663abb8596bc166fe6d0ca3192c53353)
+++ b/src/fr/neyuux/uhc/scenario/classes/modes/AssaultAndBattery.java	(date 1633074138264)
@@ -67,7 +67,7 @@
                     }
                 }
             } else
-                Bukkit.broadcastMessage(getPrefix() + "§cPour définir si vous êtes Assault ou Battery, il vous faudra utiliser l'arme choisie sur un joueur de la partie (si vous frapper quelqu'un avec une arme de corps-à-corps, vous serez Assault et vice-versa.");
+                Bukkit.broadcastMessage(getPrefix() + "§cPour définir si vous êtes Assault ou Battery, il vous faudra utiliser l'arme choisie sur un joueur de la partie (si vous frappez quelqu'un au corps-à-corps, vous serez Assault et vice-versa.");
         }, 102L);
     }
 
Index: src/fr/neyuux/uhc/util/PlayerSkin.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.neyuux.uhc.util;\r\n\r\nimport fr.neyuux.uhc.UHC;\r\nimport org.bukkit.Bukkit;\r\nimport org.json.simple.JSONArray;\r\nimport org.json.simple.JSONObject;\r\nimport org.json.simple.parser.JSONParser;\r\n\r\nimport java.net.URL;\r\nimport java.net.URLConnection;\r\nimport java.util.Scanner;\r\nimport java.util.logging.Level;\r\n\r\npublic class PlayerSkin {\r\n\r\n    String uuid;\r\n    String name;\r\n    String value;\r\n    String signatur;\r\n\r\n    public PlayerSkin(String uuid) {\r\n        this.uuid = uuid;\r\n        load();\r\n    }\r\n\r\n    @SuppressWarnings(\"resource\")\r\n    private void load() {\r\n        try {\r\n            URL url = new URL(\"https://sessionserver.mojang.com/session/minecraft/profile/\" + uuid + \"?unsigned=false\");\r\n            URLConnection uc = url.openConnection();\r\n            uc.setUseCaches(false);\r\n            uc.setDefaultUseCaches(false);\r\n            uc.addRequestProperty(\"User-Agent\", \"Mozilla/5.0\");\r\n            uc.addRequestProperty(\"Cache-Control\", \"no-cache, no-store, must-revalidate\");\r\n            uc.addRequestProperty(\"Pragma\", \"no-cache\");\r\n\r\n            String json = new Scanner(uc.getInputStream(), \"UTF-8\").useDelimiter(\"\\\\A\").next();\r\n            JSONParser parser = new JSONParser();\r\n            Object obj = parser.parse(json);\r\n            JSONArray properties = (JSONArray) ((JSONObject) obj).get(\"properties\");\r\n            for (Object o : properties) {\r\n                try {\r\n                    JSONObject property = (JSONObject) o;\r\n                    String name = (String) property.get(\"name\");\r\n                    String value = (String) property.get(\"value\");\r\n                    String signature = property.containsKey(\"signature\") ? (String) property.get(\"signature\") : null;\r\n\r\n                    this.name = name;\r\n                    this.value = value;\r\n                    this.signatur = signature;\r\n\r\n                } catch (Exception e) {\r\n                    Bukkit.getLogger().log(Level.WARNING, \"Failed to apply auth property\", e);\r\n                    Bukkit.broadcastMessage(UHC.getPrefix() + \"§cErreur lors du chargement d'un skin.\");\r\n                }\r\n            }\r\n            uc.setConnectTimeout(0);\r\n            uc.getInputStream().close();\r\n        } catch (Exception ignored) {}\r\n    }\r\n\r\n    public String getSkinValue() {\r\n        return value;\r\n    }\r\n\r\n    public String getSkinName() {\r\n        return name;\r\n    }\r\n\r\n    public String getSkinSignature() {\r\n        return signatur;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
diff --git a/src/fr/neyuux/uhc/util/PlayerSkin.java b/src/fr/neyuux/uhc/util/PlayerSkin.java
--- a/src/fr/neyuux/uhc/util/PlayerSkin.java	(revision 10f7427f663abb8596bc166fe6d0ca3192c53353)
+++ b/src/fr/neyuux/uhc/util/PlayerSkin.java	(date 1633071716988)
@@ -2,6 +2,7 @@
 
 import fr.neyuux.uhc.UHC;
 import org.bukkit.Bukkit;
+import org.bukkit.ChatColor;
 import org.json.simple.JSONArray;
 import org.json.simple.JSONObject;
 import org.json.simple.parser.JSONParser;
@@ -20,11 +21,12 @@
 
     public PlayerSkin(String uuid) {
         this.uuid = uuid;
-        load();
+        this.load();
     }
 
     @SuppressWarnings("resource")
     private void load() {
+        Bukkit.getLogger().log(Level.INFO, "Chargement du skin " + name);
         try {
             URL url = new URL("https://sessionserver.mojang.com/session/minecraft/profile/" + uuid + "?unsigned=false");
             URLConnection uc = url.openConnection();
@@ -51,12 +53,15 @@
 
                 } catch (Exception e) {
                     Bukkit.getLogger().log(Level.WARNING, "Failed to apply auth property", e);
-                    Bukkit.broadcastMessage(UHC.getPrefix() + "§cErreur lors du chargement d'un skin.");
+                    Bukkit.broadcastMessage(UHC.getPrefix() + ChatColor.RED + "Erreur lors du chargement du skin " + ChatColor.DARK_RED + name);
                 }
             }
             uc.setConnectTimeout(0);
             uc.getInputStream().close();
-        } catch (Exception ignored) {}
+        } catch (Exception e) {
+            e.printStackTrace();
+            Bukkit.broadcastMessage(UHC.getPrefix() + ChatColor.RED + "Erreur lors de la connexion lors chargement du skin " + ChatColor.DARK_RED + name);
+        }
     }
 
     public String getSkinValue() {
Index: src/fr/neyuux/uhc/commands/CommandRevive.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.neyuux.uhc.commands;\r\n\r\nimport fr.neyuux.uhc.UHC;\r\nimport fr.neyuux.uhc.InventoryManager;\r\nimport fr.neyuux.uhc.PlayerUHC;\r\nimport fr.neyuux.uhc.GameConfig;\r\nimport fr.neyuux.uhc.enums.Gstate;\r\nimport fr.neyuux.uhc.events.PlayerReviveEvent;\r\nimport fr.neyuux.uhc.teams.TeamPrefix;\r\nimport fr.neyuux.uhc.teams.UHCTeamManager;\r\nimport fr.neyuux.uhc.util.ScoreboardSign;\r\nimport org.bukkit.*;\r\nimport org.bukkit.command.Command;\r\nimport org.bukkit.command.CommandExecutor;\r\nimport org.bukkit.command.CommandSender;\r\nimport org.bukkit.command.ConsoleCommandSender;\r\nimport org.bukkit.entity.Player;\r\nimport org.bukkit.inventory.ItemStack;\r\nimport org.bukkit.inventory.PlayerInventory;\r\nimport org.bukkit.scheduler.BukkitRunnable;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class CommandRevive implements CommandExecutor {\r\n\r\n    private final UHC main;\r\n    public CommandRevive(UHC UHC) {\r\n        this.main = UHC;\r\n    }\r\n\r\n    @Override\r\n    public boolean onCommand(CommandSender sender, Command cmd, String alias, String[] args) {\r\n        if (sender instanceof ConsoleCommandSender || (sender instanceof Player && main.getPlayerUHC((Player)sender).isHost())) {\r\n            if (main.isState(Gstate.PLAYING))\r\n                if (args.length > 0) {\r\n                    if (Bukkit.getPlayer(args[0]) != null) {\r\n                        Player player = Bukkit.getPlayer(args[0]);\r\n                        PlayerUHC playerUHC = main.getPlayerUHC(player);\r\n                        if (!playerUHC.isAlive() && playerUHC.isSpec()) {\r\n                            PlayerReviveEvent ev = new PlayerReviveEvent(playerUHC);\r\n                            Bukkit.getPluginManager().callEvent(ev);\r\n                            if (!ev.isCancelled()) {\r\n                                playerUHC.unfreeze();\r\n                                playerUHC.setInvulnerable(true);\r\n                                playerUHC.setAlive(true);\r\n                                main.spectators.remove(player);\r\n                                InventoryManager.clearInventory(player);\r\n                                playerUHC.heal();\r\n                                player.setGameMode(GameMode.SURVIVAL);\r\n                                for (Achievement a : Achievement.values())\r\n                                    if (player.hasAchievement(a)) player.removeAchievement(a);\r\n                                player.updateInventory();\r\n                                PlayerInventory pi = player.getInventory();\r\n                                HashMap<Integer, ItemStack> armor = playerUHC.getLastArmor();\r\n                                if (armor.get(0) != null) pi.setHelmet(armor.get(0));\r\n                                if (armor.get(1) != null) pi.setChestplate(armor.get(1));\r\n                                if (armor.get(2) != null) pi.setLeggings(armor.get(2));\r\n                                if (armor.get(3) != null) pi.setBoots(armor.get(3));\r\n                                player.getInventory().setContents(playerUHC.getLastInv());\r\n                                player.updateInventory();\r\n                                if (playerUHC.getLastLocation() == null) playerUHC.setLastLocation(new Location(Bukkit.getWorld(Long.toString(main.world.getSeed())), 0, 100, 0));\r\n                                player.teleport(playerUHC.getLastLocation());\r\n                                if (playerUHC.isHost())\r\n                                    player.setDisplayName(TeamPrefix.getHostPrefix() + player.getName() + \"§r\");\r\n                                else player.setDisplayName(player.getName());\r\n                                player.setPlayerListName(player.getDisplayName());\r\n                                if (playerUHC.getTeam() != null) playerUHC.getTeam().revive(playerUHC);\r\n                                for (Player pl : Bukkit.getOnlinePlayers())\r\n                                    pl.playSound(pl.getLocation(), Sound.CHICKEN_EGG_POP, 7f, 2f);\r\n                                Bukkit.broadcastMessage(UHC.getPrefix() + \"§b\" + sender.getName() + \" §6a revive \" + player.getDisplayName() + \"§6.\");\r\n                                for (Map.Entry<PlayerUHC, ScoreboardSign> en : main.boards.entrySet())\r\n                                    if (GameConfig.ConfigurableParams.TEAMTYPE.getValue().equals(\"FFA\"))\r\n                                        en.getValue().setLine(3, \"§7§lJoueurs §7: §f\" + main.getAlivePlayers().size());\r\n                                    else\r\n                                        en.getValue().setLine(3, \"§7§lTeams : §f\" + main.getUHCTeamManager().getAliveTeams().size() + \"§8/§7\" + UHCTeamManager.baseteams + \" §8(§7\" + main.getAlivePlayers().size() + \"§8 joueurs)\");\r\n                                player.sendMessage(UHC.getPrefix() + \"§6Vous êtes invincible pendant 5 secondes.\");\r\n                                new BukkitRunnable() {\r\n                                    int i = 5;\r\n\r\n                                    public void run() {\r\n                                        if (i == 0) {\r\n                                            playerUHC.setInvulnerable(false);\r\n                                            cancel();\r\n                                        }\r\n                                        i--;\r\n                                    }\r\n                                }.runTaskTimer(main, 0, 20);\r\n                            } else sender.sendMessage(UHC.getPrefix() + \"§cImpossible de ressuciter ce joueur.\");\r\n                        } else sender.sendMessage(UHC.getPrefix() + \"§cImpossible de ressuciter ce joueur.\");\r\n                    } else sender.sendMessage(UHC.getPrefix() + \"§cLe joueur §4\\\"§e\" + args[0] + \"§4\\\" §cn'existe pas.\");\r\n                } else sender.sendMessage(UHC.getPrefix() + \"§cVeuillez renseigner un joueur.\");\r\n            else sender.sendMessage(UHC.getPrefix() + \"§cVous ne pouvez pas utiliser cette commande si la partie n'est pas commencé.\");\r\n        } else sender.sendMessage(UHC.getPrefix() + \"§cVous n'avez pas la permission d'utiliser cette commande.\");\r\n        return true;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
diff --git a/src/fr/neyuux/uhc/commands/CommandRevive.java b/src/fr/neyuux/uhc/commands/CommandRevive.java
--- a/src/fr/neyuux/uhc/commands/CommandRevive.java	(revision 10f7427f663abb8596bc166fe6d0ca3192c53353)
+++ b/src/fr/neyuux/uhc/commands/CommandRevive.java	(date 1633071717020)
@@ -37,10 +37,14 @@
                     if (Bukkit.getPlayer(args[0]) != null) {
                         Player player = Bukkit.getPlayer(args[0]);
                         PlayerUHC playerUHC = main.getPlayerUHC(player);
+
                         if (!playerUHC.isAlive() && playerUHC.isSpec()) {
+
                             PlayerReviveEvent ev = new PlayerReviveEvent(playerUHC);
                             Bukkit.getPluginManager().callEvent(ev);
+
                             if (!ev.isCancelled()) {
+
                                 playerUHC.unfreeze();
                                 playerUHC.setInvulnerable(true);
                                 playerUHC.setAlive(true);
@@ -50,6 +54,7 @@
                                 player.setGameMode(GameMode.SURVIVAL);
                                 for (Achievement a : Achievement.values())
                                     if (player.hasAchievement(a)) player.removeAchievement(a);
+
                                 player.updateInventory();
                                 PlayerInventory pi = player.getInventory();
                                 HashMap<Integer, ItemStack> armor = playerUHC.getLastArmor();
@@ -59,13 +64,17 @@
                                 if (armor.get(3) != null) pi.setBoots(armor.get(3));
                                 player.getInventory().setContents(playerUHC.getLastInv());
                                 player.updateInventory();
+
                                 if (playerUHC.getLastLocation() == null) playerUHC.setLastLocation(new Location(Bukkit.getWorld(Long.toString(main.world.getSeed())), 0, 100, 0));
                                 player.teleport(playerUHC.getLastLocation());
+
                                 if (playerUHC.isHost())
                                     player.setDisplayName(TeamPrefix.getHostPrefix() + player.getName() + "§r");
                                 else player.setDisplayName(player.getName());
                                 player.setPlayerListName(player.getDisplayName());
+
                                 if (playerUHC.getTeam() != null) playerUHC.getTeam().revive(playerUHC);
+
                                 for (Player pl : Bukkit.getOnlinePlayers())
                                     pl.playSound(pl.getLocation(), Sound.CHICKEN_EGG_POP, 7f, 2f);
                                 Bukkit.broadcastMessage(UHC.getPrefix() + "§b" + sender.getName() + " §6a revive " + player.getDisplayName() + "§6.");
@@ -75,6 +84,7 @@
                                     else
                                         en.getValue().setLine(3, "§7§lTeams : §f" + main.getUHCTeamManager().getAliveTeams().size() + "§8/§7" + UHCTeamManager.baseteams + " §8(§7" + main.getAlivePlayers().size() + "§8 joueurs)");
                                 player.sendMessage(UHC.getPrefix() + "§6Vous êtes invincible pendant 5 secondes.");
+
                                 new BukkitRunnable() {
                                     int i = 5;
 
Index: src/fr/neyuux/uhc/UHC.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package fr.neyuux.uhc;\r\n\r\nimport fr.neyuux.uhc.commands.*;\r\nimport fr.neyuux.uhc.enums.Gstate;\r\nimport fr.neyuux.uhc.enums.Symbols;\r\nimport fr.neyuux.uhc.events.PluginReloadEvent;\r\nimport fr.neyuux.uhc.listeners.*;\r\nimport fr.neyuux.uhc.scenario.Scenario;\r\nimport fr.neyuux.uhc.scenario.Scenarios;\r\nimport fr.neyuux.uhc.tasks.UHCStart;\r\nimport fr.neyuux.uhc.teams.TeamPrefix;\r\nimport fr.neyuux.uhc.teams.UHCTeam;\r\nimport fr.neyuux.uhc.teams.UHCTeamManager;\r\nimport fr.neyuux.uhc.util.ItemsStack;\r\nimport fr.neyuux.uhc.util.ScoreboardSign;\r\nimport net.minecraft.server.v1_8_R3.IChatBaseComponent;\r\nimport net.minecraft.server.v1_8_R3.PacketPlayOutChat;\r\nimport net.minecraft.server.v1_8_R3.PacketPlayOutPlayerListHeaderFooter;\r\nimport org.bukkit.*;\r\nimport org.bukkit.configuration.file.YamlConfiguration;\r\nimport org.bukkit.craftbukkit.v1_8_R3.entity.CraftPlayer;\r\nimport org.bukkit.entity.Player;\r\nimport org.bukkit.event.HandlerList;\r\nimport org.bukkit.inventory.ItemStack;\r\nimport org.bukkit.permissions.PermissionAttachment;\r\nimport org.bukkit.plugin.PluginManager;\r\nimport org.bukkit.plugin.java.JavaPlugin;\r\nimport org.bukkit.potion.PotionEffect;\r\nimport org.bukkit.potion.PotionEffectType;\r\nimport org.bukkit.scheduler.BukkitRunnable;\r\nimport org.bukkit.scheduler.BukkitTask;\r\nimport org.bukkit.scoreboard.Objective;\r\nimport org.bukkit.scoreboard.Scoreboard;\r\nimport org.bukkit.scoreboard.Team;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.lang.reflect.Constructor;\r\nimport java.lang.reflect.Field;\r\nimport java.lang.reflect.InvocationTargetException;\r\nimport java.lang.reflect.Method;\r\nimport java.util.*;\r\n\r\npublic class UHC extends JavaPlugin {\r\n\r\n\tpublic final List<PlayerUHC> players = new ArrayList<>();\r\n\tpublic final List<Player> spectators = new ArrayList<>();\r\n\tprivate Gstate state;\r\n\tpublic final Map<PlayerUHC, ScoreboardSign> boards = new HashMap<>();\r\n\tprivate InventoryManager InventoryManager = new InventoryManager();\r\n\tprivate UHCTeamManager uhcTeamManager = new UHCTeamManager(this);\r\n\tpublic Modes mode = Modes.UHC;\r\n\tpublic UHCStart uhcStart;\r\n\tpublic UHCWorld world = new UHCWorld(this);\r\n\tprivate GameConfig config;\r\n\tprivate static String prefix = Modes.UHC.getPrefix();\r\n\tpublic final HashMap<String, PermissionAttachment> permissions = new HashMap<>();\r\n\tprivate final List<OfflinePlayer> whitelist = new ArrayList<>();\r\n\tpublic boolean hasWhitelist;\r\n\tprivate static UHC instance;\r\n\tprivate static final HashMap<PlayerUHC, BukkitTask> infiniteActionBars = new HashMap<>();\r\n\r\n\tpublic static String getPrefixWithoutArrow() {\r\n\t\treturn getPrefix().substring(0, getPrefix().length() - 8);\r\n\t}\r\n\r\n\tpublic static String getPrefix() {\r\n\t\treturn prefix + \"§8§l\"+ Symbols.DOUBLE_ARROW+\" §r\";\r\n\t}\r\n\r\n\tpublic List<OfflinePlayer> getWhitelist() {\r\n\t\treturn this.whitelist;\r\n\t}\r\n\r\n\tpublic static UHC getInstance() {\r\n\t\treturn instance;\r\n\t}\r\n\r\n\tpublic void changeMode(Modes mode) {\r\n\t\tthis.mode = mode;\r\n\t\tprefix = mode.getPrefix();\r\n\t\tthis.world.delete();\r\n\t\trel();\r\n\t}\r\n\r\n\tpublic Gstate getState() {\r\n\t\treturn this.state;\r\n\t}\r\n\r\n\tpublic boolean isState(Gstate state) {\r\n\t\treturn this.state.equals(state);\r\n\t}\r\n\r\n\tpublic void setState(Gstate state) {\r\n\t\tthis.state = state;\r\n\t}\r\n\r\n\r\n\t@Override\r\n\tpublic void onEnable() {\r\n\t\tif (!System.getProperties().containsKey(\"RELOAD\")) {\r\n\t\t\tProperties prop = new Properties(System.getProperties());\r\n\t\t\tprop.put(\"RELOAD\", \"FALSE\");\r\n\t\t} else\r\n\t\t\tif (System.getProperty(\"RELOAD\").equals(\"TRUE\"))\r\n\t\t\t\treturn;\r\n\r\n\t\tinstance = this;\r\n\t\tthis.config = new GameConfig(this, Modes.UHC);\r\n\t\tSystem.out.println(\"UHC enabling\");\r\n\r\n\t\tFile file = new File(getDataFolder(), \"config.yml\");\r\n\t\tYamlConfiguration yconfig = YamlConfiguration.loadConfiguration(file);\r\n\t\ttry {\r\n\t\t\tyconfig.save(file);\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t\tsetState(Gstate.WAITING);\r\n\t\tthis.InventoryManager = new InventoryManager();\r\n\t\tgetCommand(\"uhc\").setExecutor(new CommandUHC(this));\r\n\t\tgetCommand(\"revive\").setExecutor(new CommandRevive(this));\r\n\t\tgetCommand(\"heal\").setExecutor(new CommandHeal(this));\r\n\t\tgetCommand(\"finish\").setExecutor(new CommandFinish(this));\r\n\t\tgetCommand(\"enchant\").setExecutor(new CommandEnchant(this));\r\n\t\tgetCommand(\"scenario\").setExecutor(new CommandScenario(this));\r\n\t\tgetCommand(\"helpop\").setExecutor(new CommandHelpOp(this));\r\n\t\tPluginManager pm = getServer().getPluginManager();\r\n\t\tpm.registerEvents(new PreGameListener(this), this);\r\n\t\tpm.registerEvents(new WorldListener(this), this);\r\n\t\tpm.registerEvents(new PlayerListener(this), this);\r\n\t\tpm.registerEvents(new FightListener(this), this);\r\n\t\tpm.registerEvents(new ArmorListener(Collections.emptyList()), this);\r\n\t\tpm.registerEvents(this.config, this);\r\n\r\n\t\treloadScoreboard();\r\n\t\trel();\r\n\r\n\t\tsuper.onEnable();\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onDisable() {\r\n\t\tSystem.out.println(\"UHC disabling\");\r\n\r\n\t\tthis.world.delete();\r\n\r\n\t\tsuper.onDisable();\r\n\t}\r\n\r\n\r\n\tpublic PlayerUHC getPlayerUHC(OfflinePlayer player) {\r\n\t\tfor (PlayerUHC pu : this.players)\r\n\t\t\tif (pu.getPlayer().getUniqueId().equals(player.getUniqueId()))\r\n\t\t\t\treturn pu;\r\n\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static ItemStack getGoldenHead(int amount) {\r\n\t\treturn new ItemsStack(Material.GOLDEN_APPLE, amount, \"§6Golden Head\", \"§7Donne §dRégénération 2 pendant 8 secondes\", \"§7et §e2 coeurs d'absorption\").toItemStack();\r\n\t}\r\n\r\n\tpublic static ItemStack getSpecTear() {\r\n\t\treturn new ItemsStack(Material.GHAST_TEAR, \"§7§lDevenir Spectateur\", \"§7Permet de devenir spectateur\", \"§b>>Clique droit\").toItemStack();\r\n\t}\r\n\r\n\tpublic InventoryManager getInventoryManager() {\r\n\t\treturn this.InventoryManager;\r\n\t}\r\n\r\n\tpublic UHCTeamManager getUHCTeamManager() {\r\n\t\treturn this.uhcTeamManager;\r\n\t}\r\n\r\n\tpublic GameConfig getGameConfig() {\r\n\t\treturn this.config;\r\n\t}\r\n\r\n\tpublic List<PlayerUHC> getAlivePlayers() {\r\n\t\tList<PlayerUHC> list = new ArrayList<>();\r\n\t\tfor (PlayerUHC pu : this.players)\r\n\t\t\tif (pu.isAlive() && pu.getPlayer().isOnline())\r\n\t\t\t\tlist.add(pu);\r\n\t\treturn list;\r\n\t}\r\n\r\n\tpublic void setLobbyScoreboard(Player player) {\r\n\t\tif (this.boards.containsKey(getPlayerUHC(player))) this.boards.get(getPlayerUHC(player)).destroy();\r\n\t\tScoreboardSign ss = new ScoreboardSign(player, getPrefixWithoutArrow());\r\n\t\tss.create();\r\n\t\tss.setLine(0, player.getDisplayName());\r\n\t\tif (this.mode.equals(Modes.UHC)) {\r\n\t\t\tss.setLine(1, \"§0\");\r\n\t\t\tss.setLine(2, \"§e§lÉquipe §e: \" +(getPlayerUHC(player).getTeam() != null ? getPlayerUHC(player).getTeam().getTeam().getDisplayName() : \"§cAucune\"));\r\n\t\t}\r\n\t\tss.setLine(3, \"§4\");\r\n\t\tss.setLine(4, \"§6§lJoueurs §6: §f\" + Bukkit.getServer().getOnlinePlayers().size() + \"§6/§e\" + GameConfig.ConfigurableParams.SLOTS.getValue());\r\n\t\tss.setLine(5, \"§8------------\");\r\n\t\tss.setLine(6, \"§5§oMap by §c§l§oNeyuux_\");\r\n\t\tthis.boards.put(getPlayerUHC(player), ss);\r\n\t}\r\n\r\n\tpublic void setGameScoreboard(Player player) {\r\n\t\tif (this.boards.containsKey(getPlayerUHC(player))) this.boards.get(getPlayerUHC(player)).destroy();\r\n\t\tScoreboardSign ss = new ScoreboardSign(player, getPrefixWithoutArrow());\r\n\t\tPlayerUHC playerUHC = getPlayerUHC(player);\r\n\t\tss.create();\r\n\t\tss.setLine(0, player.getDisplayName());\r\n\t\tif (this.mode.equals(Modes.UHC)) {\r\n\t\t\tss.setLine(1, \"§0\");\r\n\t\t\tss.setLine(2, \"§e§lÉquipe §e: \" +(playerUHC.getTeam() != null ? playerUHC.getTeam().getTeam().getDisplayName() : \"§cAucune\"));\r\n\t\t\tif (GameConfig.ConfigurableParams.TEAMTYPE.getValue().equals(\"FFA\"))\r\n\t\t\t\tss.setLine(3, \"§7§lJoueurs §7: §f\" + getAlivePlayers().size());\r\n\t\t\telse\r\n\t\t\t\tss.setLine(3, \"§7§lTeams : §f\" + this.uhcTeamManager.getTeams().size() + \"§8/§7\" + UHCTeamManager.baseteams + \" §8(§7\" + getAlivePlayers().size() + \"§8 joueurs)\");\r\n\t\t\tss.setLine(4, \"§c§lKills §c: §l\" + playerUHC.getKills() +(playerUHC.getTeam() != null ? \" §4(\"+playerUHC.getTeam().getAlivePlayersKills()+\")\" : \"\"));\r\n\t\t\tss.setLine(5, \"§5\");\r\n\t\t\tss.setLine(6, \"§6§lTimer §6: §e§l\" + getTimer(0));\r\n\t\t\tss.setLine(7, \"§6§lPvP §6: §c§l\" + getTimer((int)GameConfig.ConfigurableParams.PVP.getValue()));\r\n\t\t\tss.setLine(8, \"§6§lBordure §6: §3§l\" + getTimer((int)GameConfig.ConfigurableParams.BORDER_TIMER.getValue()));\r\n\t\t\tss.setLine(9, \"§8\");\r\n\t\t\tss.setLine(10, \"§b§lTaille de la bordure §b: \" + Symbols.PLUS_MINUS + \"§3\" + \"bordr\" + \"§b/§3\" + \"bordr\");\r\n\t\t\tss.setLine(11, \"§9§lCentre : §6\" + \"centerdist\" + \" blocks \" + \"Arrowto00\");\r\n\t\t\tss.setLine(12, \"§8------------\");\r\n\t\t\tss.setLine(13, \"§5§oMap by §c§l§oNeyuux_\");\r\n\t\t} else if (this.mode.equals(Modes.LG)) {\r\n\t\t\tss.setLine(1, \"§0\");\r\n\t\t\tss.setLine(2, \"§9§lRôle §9: \" + \"roledisplayname\");\r\n\t\t\tss.setLine(3, \"§7§lJoueurs §7: §f\" + getAlivePlayers().size());\r\n\t\t\tss.setLine(4, \"§c§lKills §c: §l\" + playerUHC.getKills());\r\n\t\t\tss.setLine(5, \"§5\");\r\n\t\t\tss.setLine(6, \"§9Groupes de §6\" + \"groups\");\r\n\t\t\tss.setLine(7, \"§8\");\r\n\t\t\tss.setLine(8, \"§6§lTimer §6: §e§l\" + getTimer(0));\r\n\t\t\tss.setLine(9, \"§6§lPvP §6:§c§l \" + getTimer((int) GameConfig.ConfigurableParams.PVP.getValue()));\r\n\t\t\tss.setLine(10, \"§6§lBordure §6:§3§l \" + getTimer((int) GameConfig.ConfigurableParams.BORDER_TIMER.getValue()));\r\n\t\t\tss.setLine(11, \"§5\");\r\n\t\t\tss.setLine(12, \"§b§lTaille de la bordure §b: \" + Symbols.PLUS_MINUS + \"§3\" + \"bordr\" + \"§b/§3\" + \"bordr\");\r\n\t\t\tss.setLine(13, \"§8------------\");\r\n\t\t\tss.setLine(14, \"§5§oMap by §c§l§oNeyuux_\");\r\n\t\t}\r\n\t\tthis.boards.put(playerUHC, ss);\r\n\t}\r\n\r\n\tpublic void setKillsScoreboard(Player player) {\r\n\t\tif (this.boards.containsKey(getPlayerUHC(player))) this.boards.get(getPlayerUHC(player)).destroy();\r\n\t\tScoreboardSign scoreboard = new ScoreboardSign(player, \"§4§lKills\");\r\n\t\tscoreboard.create();\r\n\t\tint limit = 0;\r\n\r\n\t\tComparator<Map.Entry<PlayerUHC, Integer>> valueComparator = (e1, e2) -> {\r\n\t\t\tInteger v1 = e1.getValue();\r\n\t\t\tInteger v2 = e2.getValue();\r\n\t\t\treturn v1.compareTo(v2);\r\n\t\t};\r\n\t\tList<Map.Entry<PlayerUHC, Integer>> listOfEntries = new ArrayList<>();\r\n\t\tfor (PlayerUHC pu : UHCTeamManager.baseplayers)\r\n\t\t\tlistOfEntries.add(new AbstractMap.SimpleEntry<>(pu, pu.getKills()));\r\n\r\n\t\tlistOfEntries.sort(valueComparator.reversed());\r\n\t\tfor(Map.Entry<PlayerUHC, Integer> en : listOfEntries) {\r\n\t\t\tif (limit <= 15) {\r\n\t\t\t\tString name;\r\n\t\t\t\tif (en.getKey().getTeam() != null)\r\n\t\t\t\t\tname = en.getKey().getTeam().getTeam().getPrefix() + en.getKey().getPlayer().getName() + en.getKey().getTeam().getTeam().getSuffix();\r\n\t\t\t\telse name = en.getKey().getPlayer().getName();\r\n\t\t\t\tif (en.getValue() != 0)scoreboard.setLine(limit, name + \" §7: §e\" + en.getValue());\r\n\t\t\t}\r\n\t\t\tlimit++;\r\n\t\t}\r\n\t\tthis.boards.put(getPlayerUHC(player), scoreboard);\r\n\t}\r\n\r\n\tpublic static int adaptInvSizeForInt(int toAdapt, int marge) {\r\n\t\tfor (int size = 0; size <= 6; size++)\r\n\t\t\tif (size * 9 >= toAdapt + marge) return size * 9;\r\n\t\treturn 54;\r\n\t}\r\n\r\n\tpublic static String getTimer(int seconds) {\r\n\t\tString valeur;\r\n\t\tboolean isOk = false;\r\n\t\tif (seconds == 0) return \"0s\";\r\n\t\tif (seconds % 60 > 9) {\r\n\t\t\tvaleur = (seconds % 60) + \"s\";\r\n\t\t} else {\r\n\t\t\tvaleur = \"0\" + (seconds % 60) + \"s\";\r\n\t\t}\r\n\t\tif (seconds / 3600 > 0) {\r\n\t\t\tif (seconds % 3600 / 60 > 9) {\r\n\t\t\t\tvaleur = (seconds / 3600) + \"h\" + (seconds % 3600 / 60) + \"m\" + valeur;\r\n\t\t\t} else {\r\n\t\t\t\tvaleur = (seconds / 3600) + \"h0\" + (seconds % 3600 / 60) + \"m\" + valeur;\r\n\t\t\t}\r\n\t\t} else if (seconds / 60 > 0) {\r\n\t\t\tvaleur = (seconds / 60) + \"m\" + valeur;\r\n\t\t}\r\n\t\twhile (!isOk) {\r\n\t\t\tif (valeur.endsWith(\"00m\") || valeur.endsWith(\"00s\")) {\r\n\t\t\t\tvaleur = valeur.substring(0, valeur.length() - 3);\r\n\t\t\t} else isOk = true;\r\n\t\t}\r\n\t\treturn valeur;\r\n\t}\r\n\r\n\tpublic static void playNegativeSound(Player player) {\r\n\t\tplayer.playSound(player.getLocation(), Sound.DOOR_CLOSE, 8, 2);\r\n\t}\r\n\r\n\tpublic static void playPositiveSound(Player player) {\r\n\t\tplayer.playSound(player.getLocation(), Sound.LEVEL_UP, 8f, 1.8f);\r\n\t}\r\n\r\n\tpublic static void sendHostMessage(String msg) {\r\n\t\tfor (PlayerUHC pu : getInstance().players) if (pu.isHost() && pu.getPlayer().isOnline())\r\n\t\t\tpu.getPlayer().getPlayer().sendMessage(msg);\r\n\t}\r\n\r\n\tpublic static String translatePotionEffect(PotionEffectType pet) {\r\n\t\tString s;\r\n\t\tString name = pet.getName();\r\n\t\tswitch (name) {\r\n\t\t\tcase \"ABSORPTION\":\r\n\t\t\t\ts = \"Absorption\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"BLINDNESS\":\r\n\t\t\t\ts = \"Cécité\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"CONFUSION\":\r\n\t\t\t\ts = \"Nausée\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"DAMAGE_RESISTANCE\":\r\n\t\t\t\ts = \"Résistance\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"FAST_DIGGING\":\r\n\t\t\t\ts = \"Hâte\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"FIRE_RESISTANCE\":\r\n\t\t\t\ts = \"Résitance au Feu\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HARM\":\r\n\t\t\t\ts = \"Dégâts instantanés\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HEAL\":\r\n\t\t\t\ts = \"Soins instantanés\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HEALTH_BOOST\":\r\n\t\t\t\ts = \"Bonus de Vie\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"HUNGER\":\r\n\t\t\t\ts = \"Faim\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"INCREASE_DAMAGE\":\r\n\t\t\t\ts = \"Force\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"INVISIBILITY\":\r\n\t\t\t\ts = \"Invisibilité\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"JUMP\":\r\n\t\t\t\ts = \"Bonus de Saut\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"NIGHT_VISION\":\r\n\t\t\t\ts = \"Vision Nocturne\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"POISON\":\r\n\t\t\t\ts = \"Poison\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"REGENERATION\":\r\n\t\t\t\ts = \"Régénération\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SATURATION\":\r\n\t\t\t\ts = \"Saturation\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SLOW\":\r\n\t\t\t\ts = \"Lenteur\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SLOW_DIGGING\":\r\n\t\t\t\ts = \"Fatigue\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"SPEED\":\r\n\t\t\t\ts = \"Rapidité\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"WATER_BREATHING\":\r\n\t\t\t\ts = \"Apnée\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"WEAKNESS\":\r\n\t\t\t\ts = \"Faiblesse\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"WITHER\":\r\n\t\t\t\ts = \"Wither\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new IllegalStateException(\"Unexpected value: \" + pet);\r\n\t\t}\r\n\t\treturn s;\r\n\t}\r\n\r\n\tpublic void setHealth(Player player) {\r\n\t\tif(!(boolean)GameConfig.ConfigurableParams.SCOREBOARD_LIFE.getValue()) return;\r\n\r\n\t\tif(Scenarios.TEAM_HEALTH.isActivated() && getPlayerUHC(player).getTeam() != null) {\r\n\t\t\tUHCTeam team = getPlayerUHC(player).getTeam();\r\n\r\n\t\t\tfor(PlayerUHC pu : team.getAlivePlayers()) {\r\n\t\t\t\tBukkit.getScoreboardManager().getMainScoreboard().getObjective(\"health\").getScore(pu.getPlayer().getName()).setScore((int)team.getHealth());\r\n\t\t\t\tBukkit.getScoreboardManager().getMainScoreboard().getObjective(\"healthBelow\").getScore(pu.getPlayer().getName()).setScore((int)team.getHealth());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic void setPlayerHost(Player player, boolean isHost) {\r\n\t\tScoreboard scoreboard = Bukkit.getScoreboardManager().getMainScoreboard();\r\n\t\tif (isHost) {\r\n\t\t\tif (!this.whitelist.contains(player)) this.whitelist.add(player);\r\n\t\t\tif (!this.config.hosts.contains(player.getUniqueId())) this.config.hosts.add(player.getUniqueId());\r\n\t\t\tif (!this.getPlayerUHC(player).isSpec()) {\r\n\t\t\t\tif (scoreboard.getTeam(\"Joueur\").hasEntry(player.getName())) {\r\n\t\t\t\t\tscoreboard.getTeam(\"Host\").addEntry(player.getName());\r\n\t\t\t\t\tplayer.setDisplayName(scoreboard.getEntryTeam(player.getName()).getPrefix() + player.getName());\r\n\t\t\t\t\tplayer.setPlayerListName(player.getDisplayName());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.getGameConfig().deathInvModifier != null && this.getGameConfig().deathInvModifier.equals(player))\r\n\t\t\t\tthis.getGameConfig().deathInvModifier = null;\r\n\t\t\tif (this.getGameConfig().starterModifier != null && this.getGameConfig().starterModifier.equals(player))\r\n\t\t\t\tthis.getGameConfig().starterModifier = null;\r\n\t\t\tif (this.isState(Gstate.WAITING) || this.isState(Gstate.STARTING))fr.neyuux.uhc.InventoryManager.giveWaitInventory(player);\r\n\t\t} else {\r\n\t\t\tthis.config.hosts.remove(player.getUniqueId());\r\n\t\t\tif (!this.getPlayerUHC(player).isSpec()) {\r\n\t\t\t\tif (scoreboard.getTeam(\"Host\").hasEntry(player.getName())) {\r\n\t\t\t\t\tscoreboard.getTeam(\"Joueur\").addEntry(player.getName());\r\n\t\t\t\t\tplayer.setDisplayName(scoreboard.getTeam(\"Joueur\").getPrefix() + player.getName() + \"§r\");\r\n\t\t\t\t\tplayer.setPlayerListName(player.getDisplayName());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.isState(Gstate.WAITING) || this.isState(Gstate.STARTING)) player.getInventory().remove(Material.REDSTONE_COMPARATOR);\r\n\t\t\tplayer.closeInventory();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic void updatesGrades() {\r\n\t\tList<UUID> hosts = new ArrayList<>();\r\n\t\tfor (Player p : Bukkit.getOnlinePlayers())  {\r\n\t\t\tif (p.getUniqueId().toString().equals(\"0234db8c-e6e5-45e5-8709-ea079fa575bb\")) hosts.add(p.getUniqueId());\r\n\r\n\t\t\tif (p.getUniqueId().toString().equals(\"a9198cde-e7b0-407e-9b52-b17478e17f90\")) hosts.add(p.getUniqueId());\r\n\r\n\t\t\tif (p.getUniqueId().toString().equals(\"290d1443-a362-4f79-b616-893bfb1361e5\")) hosts.add(p.getUniqueId());\r\n\r\n\t\t\tif (p.getUniqueId().toString().equals(\"9a4d5447-13e0-43a3-87af-977ba87e77a7\") || p.getUniqueId().toString().equals(\"cb067197-d121-4bfc-ac47-d6b4e40841b2\"))\r\n\t\t\t\thosts.add(p.getUniqueId());\r\n\r\n\t\t\tif (p.isOp() && !hosts.contains(p.getUniqueId()))\r\n\t\t\t\thosts.add(p.getUniqueId());\r\n\t\t}\r\n\r\n\t\tfor (Player p : Bukkit.getOnlinePlayers())\r\n\t\t\tBukkit.getScoreboardManager().getMainScoreboard().getTeam(\"Joueur\").addEntry(p.getName());\r\n\t\tfor (UUID id : hosts)\r\n\t\t\tsetPlayerHost(Bukkit.getPlayer(id), true);\r\n\t\tfor (Player p : Bukkit.getOnlinePlayers()) {\r\n\t\t\tp.setDisplayName(Bukkit.getScoreboardManager().getMainScoreboard().getEntryTeam(p.getName()).getPrefix() + p.getName());\r\n\t\t\tp.setPlayerListName(p.getDisplayName());\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic void rel() {\r\n\t\tBukkit.getPluginManager().callEvent(new PluginReloadEvent());\r\n\t\tBukkit.getScheduler().cancelTasks(this);\r\n\r\n\t\tthis.setState(Gstate.WAITING);\r\n\t\tthis.players.clear();\r\n\t\tthis.spectators.clear();\r\n\t\tGameConfig.ConfigurableParams.TEAMTYPE.setValue(GameConfig.getTeamTypeString(1, false));\r\n\t\tthis.uhcTeamManager.clearTeams();\r\n\t\tthis.boards.forEach((id, ss) -> ss.destroy());\r\n\t\tthis.boards.clear();\r\n\t\tthis.InventoryManager = new InventoryManager();\r\n\t\tthis.uhcTeamManager = new UHCTeamManager(this);\r\n\t\tScenario.removeEvents();\r\n\t\tHandlerList.unregisterAll(this.config);\r\n\t\tthis.getServer().resetRecipes();\r\n\t\tthis.config = new GameConfig(this, this.mode);\r\n\t\tthis.world.changePVP(false);\r\n\t\tthis.getServer().getPluginManager().registerEvents(this.config, this);\r\n\t\tUHCWorld.setAchievements(false);\r\n\t\tfor (Player p : Bukkit.getOnlinePlayers())\r\n\t\t\tif (p.hasPermission(\"uhc.*\"))\r\n\t\t\t\tthis.config.hosts.add(p.getUniqueId());\r\n\r\n\t\tfor (Player p : Bukkit.getOnlinePlayers()) {\r\n\t\t\tthis.players.add(new PlayerUHC(p, this));\r\n\r\n\t\t\tfor (Player p2 : Bukkit.getOnlinePlayers())\r\n\t\t\t\tp.showPlayer(p2);\r\n\t\t\tp.teleport(world.getPlatformLoc());\r\n\t\t\tfr.neyuux.uhc.InventoryManager.clearInventory(p);\r\n\t\t\tp.getInventory().clear();\r\n\t\t\tp.updateInventory();\r\n\t\t\tp.setExp(0f);\r\n\t\t\tp.setLevel(0);\r\n\t\t\tp.setMaxHealth(20);\r\n\t\t\tp.setHealth(20);\r\n\t\t\t((CraftPlayer) p).getHandle().setAbsorptionHearts(0);\r\n\t\t\tfor (PotionEffect pe : p.getActivePotionEffects()) {\r\n\t\t\t\tp.removePotionEffect(pe.getType());\r\n\t\t\t}\r\n\t\t\tPotionEffect saturation = new PotionEffect(PotionEffectType.SATURATION, Integer.MAX_VALUE, 0, true, false);\r\n\t\t\tp.addPotionEffect(saturation);\r\n\t\t\tp.setDisplayName(p.getName());\r\n\t\t\tp.setPlayerListName(p.getName());\r\n\t\t\tp.setGameMode(GameMode.ADVENTURE);\r\n\r\n\t\t\tfr.neyuux.uhc.InventoryManager.giveWaitInventory(p);\r\n\t\t\tp.updateInventory();\r\n\t\t\tsetLobbyScoreboard(p);\r\n\t\t\tUHC.setPlayerTabList(p, getPrefixWithoutArrow() + \"\\n\" + \"§fBienvenue sur la map de §c§lNeyuux_\" + \"\\n\", \"\\n\" + \"§fMerci à moi même.\");\r\n\r\n\t\t\ttry {\r\n\t\t\t\tBukkit.getScoreboardManager().getMainScoreboard().getTeam(\"Joueur\").addEntry(p.getName());\r\n\t\t\t} catch (NullPointerException e) {\r\n\t\t\t\treloadScoreboard();\r\n\t\t\t} finally {\r\n\t\t\t\tBukkit.getScoreboardManager().getMainScoreboard().getTeam(\"Joueur\").addEntry(p.getName());\r\n\t\t\t}\r\n\t\t}\r\n\t\tupdatesGrades();\r\n\t}\r\n\r\n\r\n\tpublic static void reloadScoreboard() {\r\n\t\tScoreboard s = Bukkit.getScoreboardManager().getMainScoreboard();\r\n\t\tfor (Team t : s.getTeams())\r\n\t\t\t\tt.unregister();\r\n\t\tfor (Objective ob : s.getObjectives())\r\n\t\t\tob.unregister();\r\n\r\n\t\ts.registerNewTeam(\"Host\");\r\n\t\ts.getTeam(\"Host\").setPrefix(TeamPrefix.getHostPrefix());\r\n\t\ts.getTeam(\"Host\").setSuffix(\"§r\");\r\n\t\ts.registerNewTeam(\"Joueur\");\r\n\t\ts.getTeam(\"Joueur\").setSuffix(\"§r\");\r\n\r\n\t\ts.registerNewObjective(\"health\", \"health\");\r\n\t\ts.getObjective(\"health\").setDisplayName(\"§4\" + Symbols.LITTLE_HEART);\r\n\t\ts.registerNewObjective(\"healthBelow\", \"health\");\r\n\t\ts.getObjective(\"healthBelow\").setDisplayName(\"§4\" + Symbols.LITTLE_HEART);\r\n\r\n\t}\r\n\r\n\r\n\r\n\tpublic static void setPlayerTabList(Player player,String header, String footer) {\r\n\t\tIChatBaseComponent tabTitle = IChatBaseComponent.ChatSerializer.a(\"{\\\"text\\\": \\\"\" + header + \"\\\"}\");\r\n\t\tIChatBaseComponent tabFoot = IChatBaseComponent.ChatSerializer.a(\"{\\\"text\\\": \\\"\" + footer + \"\\\"}\");\r\n\t\tPacketPlayOutPlayerListHeaderFooter packet = new PacketPlayOutPlayerListHeaderFooter(tabTitle);\r\n\t\ttry {\r\n\t\t\tField field = packet.getClass().getDeclaredField(\"b\");\r\n\t\t\tfield.setAccessible(true);\r\n\t\t\tfield.set(packet, tabFoot);\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t} finally {\r\n\t\t\tsendPacket(player, packet);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tprivate static void sendPacket(Player player, Object packet) {\r\n\t\ttry {\r\n\t\t\tObject handle = player.getClass().getMethod(\"getHandle\").invoke(player);\r\n\t\t\tObject playerConnection = handle.getClass().getField(\"playerConnection\").get(handle);\r\n\t\t\tplayerConnection.getClass().getMethod(\"sendPacket\", getNMSClass(\"Packet\")).invoke(playerConnection, packet);\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static Class<?> getNMSClass(String name) {\r\n\t\ttry {\r\n\t\t\treturn Class.forName(\"net.minecraft.server.\"\r\n\t\t\t\t\t+ Bukkit.getServer().getClass().getPackage().getName().split(\"\\\\.\")[3] + \".\" + name);\r\n\t\t} catch (ClassNotFoundException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static void sendTitle(Player player, String title, String subtitle, int fadeInTime, int showTime, int fadeOutTime) {\r\n\t\ttry {\r\n\t\t\tObject chatTitle = Objects.requireNonNull(getNMSClass(\"IChatBaseComponent\")).getDeclaredClasses()[0].getMethod(\"a\", String.class)\r\n\t\t\t\t\t.invoke(null, \"{\\\"text\\\": \\\"\" + title + \"\\\"}\");\r\n\t\t\tConstructor<?> titleConstructor = Objects.requireNonNull(getNMSClass(\"PacketPlayOutTitle\")).getConstructor(\r\n\t\t\t\t\tObjects.requireNonNull(getNMSClass(\"PacketPlayOutTitle\")).getDeclaredClasses()[0], getNMSClass(\"IChatBaseComponent\"),\r\n\t\t\t\t\tint.class, int.class, int.class);\r\n\t\t\tObject packet = titleConstructor.newInstance(\r\n\t\t\t\t\tObjects.requireNonNull(getNMSClass(\"PacketPlayOutTitle\")).getDeclaredClasses()[0].getField(\"TITLE\").get(null), chatTitle,\r\n\t\t\t\t\tfadeInTime, showTime, fadeOutTime);\r\n\r\n\t\t\tObject chatsTitle = Objects.requireNonNull(getNMSClass(\"IChatBaseComponent\")).getDeclaredClasses()[0].getMethod(\"a\", String.class)\r\n\t\t\t\t\t.invoke(null, \"{\\\"text\\\": \\\"\" + subtitle + \"\\\"}\");\r\n\t\t\tConstructor<?> timingTitleConstructor = Objects.requireNonNull(getNMSClass(\"PacketPlayOutTitle\")).getConstructor(\r\n\t\t\t\t\tObjects.requireNonNull(getNMSClass(\"PacketPlayOutTitle\")).getDeclaredClasses()[0], getNMSClass(\"IChatBaseComponent\"),\r\n\t\t\t\t\tint.class, int.class, int.class);\r\n\t\t\tObject timingPacket = timingTitleConstructor.newInstance(\r\n\t\t\t\t\tObjects.requireNonNull(getNMSClass(\"PacketPlayOutTitle\")).getDeclaredClasses()[0].getField(\"SUBTITLE\").get(null), chatsTitle,\r\n\t\t\t\t\tfadeInTime, showTime, fadeOutTime);\r\n\r\n\t\t\tsendPacket(player, packet);\r\n\t\t\tsendPacket(player, timingPacket);\r\n\t\t} catch (Exception e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic static void sendActionBar(Player p, String message) {\r\n\t\tIChatBaseComponent cbc = IChatBaseComponent.ChatSerializer.a(\"{\\\"text\\\": \\\"\" + message + \"\\\"}\");\r\n\t\tPacketPlayOutChat ppoc = new PacketPlayOutChat(cbc, (byte) 2);\r\n\t\ttry {\r\n\t\t\t((CraftPlayer) p).getHandle().playerConnection.sendPacket(ppoc);\r\n\t\t} catch (NullPointerException e) {e.printStackTrace();}\r\n\t}\r\n\r\n\r\n\tpublic static void sendActionBarForAllPlayers(String message) {\r\n\t\tfor (Player p : Bukkit.getOnlinePlayers()) {\r\n\t\t\tsendActionBar(p, message);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void sendInfiniteActionBar(PlayerUHC pu, String message) {\r\n\t\tif (!pu.getPlayer().isOnline()) return;\r\n\t\tBukkitRunnable br = new BukkitRunnable() {\r\n\t\t\t@Override\r\n\t\t\tpublic void run() {\r\n\t\t\t\tsendActionBar(pu.getPlayer().getPlayer(), message);\r\n\t\t\t}\r\n\t\t};\r\n\t\tif (infiniteActionBars.containsKey(pu)) stopInfiniteActionBar(pu);\r\n\t\tinfiniteActionBars.put(pu, br.runTaskTimer(UHC.getInstance(), 0, 5));\r\n\t}\r\n\r\n\tpublic static void sendInfiniteActionBarForAllPlayers(String message) {\r\n\t\tfor (Player p : Bukkit.getOnlinePlayers()) sendInfiniteActionBar(instance.getPlayerUHC(p), message);\r\n\t}\r\n\r\n\tpublic static void stopInfiniteActionBar(PlayerUHC pu) {\r\n\t\tif (infiniteActionBars.containsKey(pu)) {\r\n\t\t\tinfiniteActionBars.get(pu).cancel();\r\n\t\t\tinfiniteActionBars.remove(pu);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void stopInfiniteActionBarForAllPlayers() {\r\n\t\tinfiniteActionBars.values().forEach(BukkitTask::cancel);\r\n\t\tinfiniteActionBars.clear();\r\n\t}\r\n\r\n\r\n\tpublic static void setF3(Player p, boolean isReducted) {\r\n\t\ttry {\r\n\t\t\tClass<?> packetClass = getNMSClass(\"PacketPlayOutEntityStatus\");\r\n\t\t\tConstructor<?> packetConstructor = packetClass.getConstructor(getNMSClass(\"Entity\"), Byte.TYPE);\r\n\t\t\tObject packet;\r\n\t\t\tif (isReducted) packet = packetConstructor.newInstance(getHandle(p), (byte) 22);\r\n\t\t\telse packet = packetConstructor.newInstance(getHandle(p), (byte) 23);\r\n\t\t\tsendPacket(p, packet);\r\n\t\t} catch(Exception e) {\r\n\t\t\tBukkit.broadcastMessage(getPrefix() + \"§4[§cErreur§4]§c Une erreur s'est produite lors de la modification du F3 pour\" + p.getName());\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static Object getHandle(Player player) throws SecurityException, NoSuchMethodException, IllegalArgumentException, IllegalAccessException, InvocationTargetException {\r\n\t\tMethod getHandle = player.getClass().getMethod(\"getHandle\");\r\n\t\treturn getHandle.invoke(player);\r\n\t}\r\n\r\n\r\n\r\n\tpublic enum Modes {\r\n\r\n\t\tLG(\"§4§lL§8§lG §9§lUHC\"),\r\n\t\tUHC(\"§e§lUHC\");\r\n\r\n\t\tModes(String prefix) {\r\n\t\t\tthis.prefix = prefix;\r\n\t\t}\r\n\r\n\t\tprivate final String prefix;\r\n\r\n\t\tpublic String getPrefix() {\r\n\t\t\treturn prefix;\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
diff --git a/src/fr/neyuux/uhc/UHC.java b/src/fr/neyuux/uhc/UHC.java
--- a/src/fr/neyuux/uhc/UHC.java	(revision 10f7427f663abb8596bc166fe6d0ca3192c53353)
+++ b/src/fr/neyuux/uhc/UHC.java	(date 1633074884408)
@@ -280,29 +280,29 @@
 	}
 
 	public static String getTimer(int seconds) {
-		String valeur;
+		String value;
 		boolean isOk = false;
 		if (seconds == 0) return "0s";
 		if (seconds % 60 > 9) {
-			valeur = (seconds % 60) + "s";
+			value = (seconds % 60) + "s";
 		} else {
-			valeur = "0" + (seconds % 60) + "s";
+			value = "0" + (seconds % 60) + "s";
 		}
 		if (seconds / 3600 > 0) {
 			if (seconds % 3600 / 60 > 9) {
-				valeur = (seconds / 3600) + "h" + (seconds % 3600 / 60) + "m" + valeur;
+				value = (seconds / 3600) + "h" + (seconds % 3600 / 60) + "m" + value;
 			} else {
-				valeur = (seconds / 3600) + "h0" + (seconds % 3600 / 60) + "m" + valeur;
+				value = (seconds / 3600) + "h0" + (seconds % 3600 / 60) + "m" + value;
 			}
 		} else if (seconds / 60 > 0) {
-			valeur = (seconds / 60) + "m" + valeur;
+			value = (seconds / 60) + "m" + value;
 		}
 		while (!isOk) {
-			if (valeur.endsWith("00m") || valeur.endsWith("00s")) {
-				valeur = valeur.substring(0, valeur.length() - 3);
+			if (value.endsWith("00m") || value.endsWith("00s")) {
+				value = value.substring(0, value.length() - 3);
 			} else isOk = true;
 		}
-		return valeur;
+		return value;
 	}
 
 	public static void playNegativeSound(Player player) {
